{"version":3,"sources":["components/Checkbox.js","components/Card.js","components/App.js","index.js"],"names":["Checkbox","type","name","checked","onChange","id","htmlFor","React","memo","title","body","className","symbol","date","open","price","low","high","API_KEY","process","list","stock","App","hundleCheckbox","e","newList","state","index","findIndex","item","target","setState","hundleShow","i","length","api_call","fetch","then","res","json","data","buildStock","console","log","alert","catch","this","style","margin","map","key","onClick","x","Component","ReactDOM","render","document","getElementById"],"mappings":"2OAeeA,EAbE,SAAC,GAAD,QAAGC,YAAH,MAAU,WAAV,EAAsBC,EAAtB,EAAsBA,KAAtB,IAA4BC,eAA5B,SAA6CC,EAA7C,EAA6CA,SAA7C,OACf,oCACE,2BACEC,GAAIH,EACJD,KAAMA,EACNC,KAAMA,EACNC,QAASA,EACTC,SAAUA,IAEZ,2BAAOE,QAASJ,GAAOA,KCwBZK,MAAMC,MAjCR,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACrB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,mBAAmBF,GAClC,yBAAKE,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,QAAf,WACA,6BAAMD,EAAKE,SAEb,yBAAKD,UAAU,OACb,yBAAKA,UAAU,QAAf,SACA,6BAAMD,EAAKG,OAEb,yBAAKF,UAAU,OACb,yBAAKA,UAAU,QAAf,SACA,6BAAMD,EAAKI,OAEb,yBAAKH,UAAU,OACb,yBAAKA,UAAU,QAAf,UACA,6BAAMD,EAAKK,QAEb,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,QAAf,QACA,6BAAMD,EAAKM,MAEb,yBAAKL,UAAU,OACb,yBAAKA,UAAU,QAAf,SACA,6BAAMD,EAAKO,YCzBfC,EAAUC,qDAAYD,QACtBE,EAAO,CACX,CACElB,KAAM,SACNU,OAAQ,OACRT,SAAS,EACTkB,MAAO,IAET,CACEnB,KAAM,SACNU,OAAQ,QACRT,SAAS,EACTkB,MAAO,IAET,CACEnB,KAAM,UACNU,OAAQ,OACRT,SAAS,EACTkB,MAAO,IAET,CACEnB,KAAM,WACNU,OAAQ,KACRT,SAAS,EACTkB,MAAO,IAET,CACEnB,KAAM,QACNU,OAAQ,OACRT,SAAS,EACTkB,MAAO,KAsHIC,E,YAjHb,aAAe,IAAD,8BACZ,+CAMFC,eAAiB,SAAAC,GAEf,IAAMC,EAAO,YAAO,EAAKC,MAAMN,MAEzBO,EAAQF,EAAQG,WAAU,SAAAC,GAAI,OAAIA,EAAK3B,OAASsB,EAAEM,OAAO5B,QAE/DuB,EAAQE,GAAOxB,QAAUqB,EAAEM,OAAO3B,QAElC,EAAK4B,SAAL,YAAkBN,KAfN,EAkBdO,WAAa,WAIX,IAFA,IAAMZ,EAAI,YAAO,EAAKM,MAAMN,MAFX,WAIRa,GACP,IAAwB,IAApBb,EAAKa,GAAG9B,SAEV,GAA6B,IAAzBiB,EAAKa,GAAGZ,MAAMa,OAAc,CAC9B,IAAMC,EAAQ,yEAAqEf,EAAKa,GAAGrB,OAA7E,mBAA8FM,GAE5GkB,MAAMD,GACHE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJ,GAAIA,EAAK,gBAAiB,CAExB,IAAIC,EAAa,CACfhC,MAAOW,EAAKa,GAAG/B,KACfQ,KAAM,CACJE,OAAQQ,EAAKa,GAAGrB,OAChBE,KAAM0B,EAAK,gBAAgB,YAC3BvB,KAAMuB,EAAK,gBAAgB,YAC3BxB,IAAKwB,EAAK,gBAAgB,WAC1BzB,MAAOyB,EAAK,gBAAgB,aAC5B3B,KAAM2B,EAAK,gBAAgB,4BAI/BpB,EAAKa,GAAGZ,MAAQ,CAACoB,GAEjB,EAAKV,SAAL,YAAkBX,IAClBsB,QAAQC,IAAI,gBAAiB,EAAKjB,MAAMN,WAIxCwB,MAAM,2DAGTC,OAAM,SAAArB,GAAC,OAAIkB,QAAQC,IAAInB,YAIxBJ,EAAKa,GAAGZ,MAAMa,OAAS,IAEzBd,EAAKa,GAAGZ,MAAQ,GAEhB,EAAKU,SAAL,YAAkBX,IAClBsB,QAAQC,IAAI,kBAAmB,EAAKjB,MAAMN,QA3CvCa,EAAI,EAAGA,EAAIb,EAAKc,OAAQD,IAAM,EAA9BA,IApBT,EAAKP,MAAQ,CACXN,QAHU,E,sEAuEJ,IAAD,OACCA,EAAS0B,KAAKpB,MAAdN,KACR,OACE,yBAAKT,UAAU,OACb,gCACE,uCAEF,yBAAKN,GAAG,OAAO0C,MAAO,CAACC,OAAO,SAC5B,8DACA,yBAAKrC,UAAU,kCACZS,EACGA,EAAK6B,KAAI,SAACpB,EAAMF,GAAP,OACP,yBAAKuB,IAAKvB,EAAOhB,UAAU,6BACzB,kBAAC,EAAD,CACET,KAAM2B,EAAK3B,KACXC,QAAS0B,EAAK1B,QACdC,SAAU,EAAKmB,qBAIrB,MAGN,yBAAKZ,UAAU,eACb,4BAAQwC,QAASL,KAAKd,YAAtB,UAIJ,yBAAKrB,UAAU,eACZS,EACGA,EAAK6B,KAAI,SAAAG,GAAC,OACRA,EAAE/B,MAAM4B,KAAI,SAACpB,EAAMF,GAAP,OACV,kBAAC,EAAD,CAAOlB,MAAOoB,EAAKpB,MAAOC,KAAMmB,EAAKnB,KAAMwC,IAAKvB,UAGpD,W,GA3GI0B,aChClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a5f289d9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Checkbox = ({ type = \"checkbox\", name, checked = false, onChange }) => (\r\n  <>\r\n    <input\r\n      id={name}\r\n      type={type}\r\n      name={name}\r\n      checked={checked}\r\n      onChange={onChange}\r\n    />\r\n    <label htmlFor={name}>{name}</label>\r\n  </>\r\n);\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ title, body }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-title bold\">{title}</div>\r\n      <div className=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"bold\">Symbol:</div>\r\n          <div>{body.symbol}</div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"bold\">Date:</div>\r\n          <div>{body.date}</div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"bold\">Open:</div>\r\n          <div>{body.open}</div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"bold\">Price:</div>\r\n          <div>{body.price}</div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"bold\">Low:</div>\r\n          <div>{body.low}</div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"bold\">High:</div>\r\n          <div>{body.high}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default React.memo(Card);\r\n","import React, { Component } from \"react\";\nimport Checkbox from \"./Checkbox.js\";\nimport Card from \"./Card\";\n\nconst API_KEY = process.env.API_KEY;\nconst list = [\n  {\n    name: \"Amazon\",\n    symbol: \"AMZN\",\n    checked: false,\n    stock: [],\n  },\n  {\n    name: \"Google\",\n    symbol: \"GOOGL\",\n    checked: false,\n    stock: []\n  },\n  {\n    name: \"Twitter\",\n    symbol: \"TWTR\",\n    checked: false,\n    stock: []\n  },\n  {\n    name: \"Facebook\",\n    symbol: \"FB\",\n    checked: false,\n    stock: []\n  },\n  {\n    name: \"Apple\",\n    symbol: \"AAPL\",\n    checked: false,\n    stock: []\n  }\n];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      list\n    };\n  }\n\n  hundleCheckbox = e => {\n    //copy the state\n    const newList = [...this.state.list];\n    //finding the index where change happened\n    const index = newList.findIndex(item => item.name === e.target.name);\n    //update the value of the checked button into the copy list\n    newList[index].checked = e.target.checked;\n    //setting state to the new list after updates\n    this.setState([...newList]);\n  };\n\n  hundleShow = () => {\n    //copy the state\n    const list = [...this.state.list];\n    //looping on the list to find what stock we should fetch\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].checked === true) {\n        //making sure the function wont fetch data if it already exist\n        if (list[i].stock.length === 0) {\n          const api_call = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${list[i].symbol}&apikey=${API_KEY}`;\n          //fetching the data from alphavantage api\n          fetch(api_call)\n            .then(res => res.json())\n            .then(data => {\n              //api has limit of 5 calls per min. making sure we got the data\n              if (data[\"Global Quote\"]) {\n                //making new obj for the stock\n                let buildStock = {\n                  title: list[i].name,\n                  body: {\n                    symbol: list[i].symbol,\n                    open: data[\"Global Quote\"][\"02. open\"],\n                    high: data[\"Global Quote\"][\"03. high\"],\n                    low: data[\"Global Quote\"][\"04. low\"],\n                    price: data[\"Global Quote\"][\"05. price\"],\n                    date: data[\"Global Quote\"][\"07. latest trading day\"]\n                  }\n                };\n                //adding the new stock to the list\n                list[i].stock = [buildStock];\n                //setting state of the new list\n                this.setState([...list]);\n                console.log(\"adding stocks\", this.state.list);\n              }\n              //we made more then 5 calls to the api need to wait 60 sec\n              else {\n                alert(\"Cant load more data from the api need to wait 60 sec\");\n              }\n            })\n            .catch(e => console.log(e));\n        }\n      } else {\n        //making sure we clear only the stocks that has info\n        if (list[i].stock.length > 0) {\n          //clearing stock\n          list[i].stock = [];\n          //set the new state\n          this.setState([...list]);\n          console.log(\"clearing stocks\", this.state.list);\n        }\n      }\n    }\n  };\n\n  render() {\n    const { list } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <h2>Stocks</h2>\n        </header>\n        <div id=\"list\" style={{margin:\"1rem\"}}>\n          <h6>Mark the stock you want to see</h6>\n          <div className=\"checkbox-container flex-center\">\n            {list\n              ? list.map((item, index) => (\n                  <div key={index} className=\"checkbox-list flex-center\">\n                    <Checkbox\n                      name={item.name}\n                      checked={item.checked}\n                      onChange={this.hundleCheckbox}\n                    />\n                  </div>\n                ))\n              : null}\n          </div>\n\n          <div className=\"flex-center\">\n            <button onClick={this.hundleShow}>Show</button>\n          </div>\n        </div>\n\n        <div className=\"flex-center\">\n          {list\n            ? list.map(x =>\n                x.stock.map((item, index) => (\n                  <Card  title={item.title} body={item.body} key={index} />\n                ))\n              )\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}